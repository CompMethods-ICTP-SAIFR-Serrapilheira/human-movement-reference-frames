install.packages("devtools")
devtools::install_github("steenharsted/mocapr")
?mocapr_data
help(mocapr_data)
??mocapr_data
?import_captury()
limD  <-  0.003                                                                 # Minimum displacement threshold
limT <- 0.1                                                                     # Minimum duration threshold
limV <- 0.01                                                                    # Minimum velocity threshold
lp <- 10                                                                        # Low pass filter frequency
order <- 4                                                                      # Low pass filter order
markers <- c("RUA1", "LUA1", "LF1", "RF1", "STRN", "LFHD", "L_IAS", "L_TH1",
"R_TH1", "L_SK1", "R_SK1", "L_FM2", "R_FM2", "L_HM1", "R_HM1")     # Markers used in the analysis
data_files <- list.files(path = "data/raw",
pattern = "c3d$",
full.names = TRUE)
data_names <- gsub(".c3d", "", basename(data_files), fixed = TRUE)
data_files <- list.files(path = "data/raw/*",
pattern = "c3d$",
full.names = TRUE)
help(list.files)
data_files <- list.files(path = "data/raw",
pattern = "c3d$",
recursive = TRUE,
full.names = TRUE)
data_names <- gsub(".c3d", "", basename(data_files), fixed = TRUE)
import_captury(data_files[1])
mocapr::import_captury(data_files[1])
data <- mocapr::import_captury(data_files[1])
last_error()
data_names <- gsub(".c3d", "", basename(data_files), fixed = TRUE)
last_error()
data <- mocapr::import_captury(data_files[1])
library(tidyverse)
library(mocapr)
data_names <- gsub(".c3d", "", basename(data_files), fixed = TRUE)
last_error()
data <- mocapr::import_captury(data_files[1])
data_names <- gsub(".c3d", "", basename(data_files), fixed = TRUE)
last_error()
data <- mocapr::project_full_body_to_AP(data_files[1])
jump_1 <- filter(mocapr::mocapr_data, movement_nr == 2)
View(jump_1)
jump_1 <- filter(mocapr::data_files[1], movement_nr == 2)
jump_1 <- filter(data_files[1], movement_nr == 2)
data_files[1]
source("~/.active-rstudio-document", echo=TRUE)
data_names
source("~/.active-rstudio-document", echo=TRUE)
number_files
source("~/.active-rstudio-document", echo=TRUE)
data_names[1]
data_names[1][4]
a=data_names[1]
a[1]
a[2]
?stringr
??stringr
?stringi
# Necessary packages -----------------------------------------------------------
install.packages("stringi")
low_pass <- 10                                                                  # Low pass filter frequency
library(stringi)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
data_laterality[1]
data_laterality[1]=="R"
data_laterality[1]=="L"
source("C:/Workflow/Compare referentials/R/1_data_filtering.R", echo=TRUE)
debugSource("C:/Workflow/Compare referentials/R/1_data_filtering.R", echo=TRUE)
debugSource("C:/Workflow/Compare referentials/R/1_data_filtering.R", echo=TRUE)
View(data)
library(signal)
?butter
?filtfilt
source("C:/Workflow/Compare referentials/R/1_data_filtering.R", echo=TRUE)
source("C:/Workflow/Compare referentials/R/1_data_filtering.R", echo=TRUE)
source("C:/Workflow/Compare referentials/R/1_data_filtering.R", echo=TRUE)
data[,3:5]
debugSource("C:/Workflow/Compare referentials/R/1_data_filtering.R", echo=TRUE)
View(bf)
debugSource("C:/Workflow/Compare referentials/R/1_data_filtering.R", echo=TRUE)
debugSource("C:/Workflow/Compare referentials/R/1_data_filtering.R", echo=TRUE)
debugSource("C:/Workflow/Compare referentials/R/1_data_filtering.R", echo=TRUE)
View(data)
data.marker
bf.a
data(,1)
data$marker
data$marker==markers
aux <- data$marker==markers
aux <- data$marker==markers[1]
aux <- c(aux)
aux
sum(aux)
12824*4
aux = data[,3:5]
source("C:/Workflow/Compare referentials/R/1_data_filtering.R", echo=TRUE)
debugSource("C:/Workflow/Compare referentials/R/1_data_filtering.R", echo=TRUE)
source("C:/Workflow/Compare referentials/R/1_data_filtering.R", echo=TRUE)
debugSource("C:/Workflow/Compare referentials/R/1_data_filtering.R", echo=TRUE)
View(inert)
source("C:/Workflow/Compare referentials/R/1_data_filtering.R", echo=TRUE)
source("C:/Workflow/Compare referentials/R/1_data_filtering.R", echo=TRUE)
debugSource("C:/Workflow/Compare referentials/R/1_data_filtering.R", echo=TRUE)
View(inert)
View(non_inert)
View(inert)
source("C:/Workflow/Compare referentials/R/1_data_filtering.R", echo=TRUE)
debugSource("C:/Workflow/Compare referentials/R/1_data_filtering.R", echo=TRUE)
View(inert)
data$t[2]-data$t[1]
1/(data$t[2]-data$t[1])
debugSource("C:/Workflow/Compare referentials/R/1_data_filtering.R", echo=TRUE)
View(non_inert)
View(inert)
source("C:/Workflow/Compare referentials/R/1_data_filtering.R", echo=TRUE)
debugSource("C:/Workflow/Compare referentials/R/1_data_filtering.R", echo=TRUE)
source("C:/Workflow/Compare referentials/R/1_data_filtering.R", echo=TRUE)
?dir.create
source("C:/Workflow/Compare referentials/R/1_data_filtering.R", echo=TRUE)
source("C:/Workflow/Compare referentials/R/1_data_filtering.R", echo=TRUE)
debugSource("C:/Workflow/Compare referentials/R/1_data_filtering.R", echo=TRUE)
source("C:/Workflow/Compare referentials/R/1_data_filtering.R", echo=TRUE)
debugSource("C:/Workflow/Compare referentials/R/1_data_filtering.R", echo=TRUE)
length(inert)
size(inert)
length(inert$t)
inert
View(inert)
length(inert$v)
length(inert$x)
debugSource("C:/Workflow/Compare referentials/R/1_data_filtering.R", echo=TRUE)
source("C:/Workflow/Compare referentials/R/1_data_filtering.R", echo=TRUE)
x <- seq(0,10,0.001)
y <- sin(x)
pk <- findpeaks(y)
library(pracma)
x <- seq(0,10,0.001)
y <- sin(x)
pk <- findpeaks(y)
View(pk)
View(pk)
plot(x,y)
plot(y)
length(pk)
size(pk,1)
size(pk,2)
out <- data.frame()
out$x[1] <- 0
eu quero criar um dataframe com 3 colunas
ainda nÃ£o
source('fct/segment_MED.R')
source('fct/analyse_elements_MED.R')
source('fct/fit_MED.R')
path_inertial <- list.files(path = "data/processed/filtered_data/inertial/",    # List processed data paths
pattern = "csv$",
recursive = TRUE,
full.names = TRUE)
path_non_inertial <- list.files(path = "data/processed/filtered_data/non_inertial",
pattern = "csv$",
recursive = TRUE,
full.names = TRUE)
min_D <- 0.003                                                                  # Minimum displacement threshold
min_T <- 0.1                                                                    # Minimum duration threshold
min_V <- 0.01                                                                   # Minimum velocity threshold
W <- c()
R2 <- c()
data <- c()
output <- data.frame(data, W, R2)
#install.packages('pracma')
library(pracma)
source('fct/segment_MED.R')
source('fct/analyse_elements_MED.R')
source('fct/fit_MED.R')
path_inertial <- list.files(path = "data/processed/filtered_data/inertial/",    # List processed data paths
pattern = "csv$",
recursive = TRUE,
full.names = TRUE)
path_non_inertial <- list.files(path = "data/processed/filtered_data/non_inertial",
pattern = "csv$",
recursive = TRUE,
full.names = TRUE)
min_D <- 0.003                                                                  # Minimum displacement threshold
min_T <- 0.1                                                                    # Minimum duration threshold
min_V <- 0.01                                                                   # Minimum velocity threshold
W <- c()
R2 <- c()
data <- c()
output <- data.frame(data, W, R2)
View(output)
source("C:/Workflow/Compare referentials/R/2_movement_element_decomposition.R", echo=TRUE)
debugSource("C:/Workflow/Compare referentials/R/2_movement_element_decomposition.R", echo=TRUE)
output$W
append(output$W, W_mean)
debugSource("C:/Workflow/Compare referentials/R/2_movement_element_decomposition.R", echo=TRUE)
source("C:/Workflow/Compare referentials/R/2_movement_element_decomposition.R", echo=TRUE)
source("C:/Workflow/Compare referentials/R/2_movement_element_decomposition.R", echo=TRUE)
source("C:/Workflow/Compare referentials/R/2_movement_element_decomposition.R", echo=TRUE)
debugSource("C:/Workflow/Compare referentials/R/2_movement_element_decomposition.R", echo=TRUE)
debugSource("C:/Workflow/Compare referentials/R/2_movement_element_decomposition.R", echo=TRUE)
debugSource("C:/Workflow/Compare referentials/R/2_movement_element_decomposition.R", echo=TRUE)
plot(vy)
plot(vz)
plot(vy)
plot(y)
plot(z)
debugSource("C:/Workflow/Compare referentials/R/2_movement_element_decomposition.R", echo=TRUE)
seg[100]
seg_i[100]
seg_f[100]
source("C:/Workflow/Compare referentials/fct/segment_MED.R")
debugSource("C:/Workflow/Compare referentials/R/2_movement_element_decomposition.R", echo=TRUE)
debugSource("C:/Workflow/Compare referentials/R/2_movement_element_decomposition.R", echo=TRUE)
debugSource("C:/Workflow/Compare referentials/R/2_movement_element_decomposition.R", echo=TRUE)
plot(seg_i)
plot(seg_i_class)
plot(v[seg_i[99]:seg_f[99]])
plot(v[seg_i[1]:seg_f[1]])
plot(v[seg_i[2]:seg_f[2]])
plot(v[seg_f[99]:seg_i[100]])
seg_i[100]
length(v)
plot(v[seg_i[100]:length(v)])
source("C:/Workflow/Compare referentials/fct/segment_MED.R")
debugSource("C:/Workflow/Compare referentials/R/2_movement_element_decomposition.R", echo=TRUE)
debugSource("C:/Workflow/Compare referentials/R/2_movement_element_decomposition.R", echo=TRUE)
debugSource("C:/Workflow/Compare referentials/R/2_movement_element_decomposition.R", echo=TRUE)
debugSource("C:/Workflow/Compare referentials/R/2_movement_element_decomposition.R", echo=TRUE)
debugSource("C:/Workflow/Compare referentials/R/2_movement_element_decomposition.R", echo=TRUE)
source("C:/Workflow/Compare referentials/fct/segment_MED.R")
debugSource("C:/Workflow/Compare referentials/R/2_movement_element_decomposition.R", echo=TRUE)
debugSource("C:/Workflow/Compare referentials/R/2_movement_element_decomposition.R", echo=TRUE)
debugSource("C:/Workflow/Compare referentials/R/2_movement_element_decomposition.R", echo=TRUE)
debugSource("C:/Workflow/Compare referentials/R/2_movement_element_decomposition.R", echo=TRUE)
debugSource("C:/Workflow/Compare referentials/R/2_movement_element_decomposition.R", echo=TRUE)
debugSource("C:/Workflow/Compare referentials/R/2_movement_element_decomposition.R", echo=TRUE)
debugSource("C:/Workflow/Compare referentials/R/2_movement_element_decomposition.R", echo=TRUE)
debugSource("C:/Workflow/Compare referentials/R/2_movement_element_decomposition.R", echo=TRUE)
debugSource("C:/Workflow/Compare referentials/R/2_movement_element_decomposition.R", echo=TRUE)
View(x_indices)
View(y_indices)
View(z_indices)
debugSource("C:/Workflow/Compare referentials/R/2_movement_element_decomposition.R", echo=TRUE)
debugSource("C:/Workflow/Compare referentials/R/2_movement_element_decomposition.R", echo=TRUE)
if(i_data == 13){
print('ok')
}
debugSource("C:/Workflow/Compare referentials/R/2_movement_element_decomposition.R", echo=TRUE)
debugSource("C:/Workflow/Compare referentials/R/2_movement_element_decomposition.R", echo=TRUE)
plot(vz)
debugSource("C:/Workflow/Compare referentials/R/2_movement_element_decomposition.R", echo=TRUE)
plot(seg_class)
plot(seg_f-seg_i)
seg_i
seg_f
seg_f
seg_i
pk_class
diff(pk_class)
sum(diff(pk_class))
find(pk_class == 0)
which(pk_class == 0)
?which
pk_class[-0]
pk_class[1]
pk_class <- pk_class[-1]
pk_class <- pk_class[-0]
source("C:/Workflow/Compare referentials/fct/segment_MED.R")
debugSource("C:/Workflow/Compare referentials/R/2_movement_element_decomposition.R", echo=TRUE)
debugSource("C:/Workflow/Compare referentials/R/2_movement_element_decomposition.R", echo=TRUE)
source("C:/Workflow/Compare referentials/fct/segment_MED.R")
debugSource("C:/Workflow/Compare referentials/R/2_movement_element_decomposition.R", echo=TRUE)
debugSource("C:/Workflow/Compare referentials/R/2_movement_element_decomposition.R", echo=TRUE)
debugSource("C:/Workflow/Compare referentials/R/2_movement_element_decomposition.R", echo=TRUE)
debugSource("C:/Workflow/Compare referentials/R/2_movement_element_decomposition.R", echo=TRUE)
source("C:/Workflow/Compare referentials/fct/segment_MED.R")
aux = which(abs(v) <= minV)
aux = which(abs(vv) <= minV)
aux = which(abs(vx) <= minV)
aux = which(abs(vx) <= min_V)
vx[33]
vx[34]
min_v
min_V
source("C:/Workflow/Compare referentials/fct/segment_MED.R")
source("C:/Workflow/Compare referentials/fct/segment_MED.R")
debugSource("C:/Workflow/Compare referentials/R/2_movement_element_decomposition.R", echo=TRUE)
source("C:/Workflow/Compare referentials/fct/segment_MED.R")
debugSource("C:/Workflow/Compare referentials/R/2_movement_element_decomposition.R", echo=TRUE)
debugSource("C:/Workflow/Compare referentials/R/2_movement_element_decomposition.R", echo=TRUE)
90/66
90/6
debugSource("C:/Workflow/Compare referentials/R/2_movement_element_decomposition.R", echo=TRUE)
debugSource("C:/Workflow/Compare referentials/fct/segment_MED.R")
debugSource("C:/Workflow/Compare referentials/R/2_movement_element_decomposition.R", echo=TRUE)
source("C:/Workflow/Compare referentials/fct/segment_MED.R")
debugSource("C:/Workflow/Compare referentials/R/2_movement_element_decomposition.R", echo=TRUE)
plot(v)
seg_F
seg_f
seg_i
v[1]
v[length(v)]
pk_class
source("C:/Workflow/Compare referentials/fct/segment_MED.R")
debugSource("C:/Workflow/Compare referentials/R/2_movement_element_decomposition.R", echo=TRUE)
debugSource("C:/Workflow/Compare referentials/R/2_movement_element_decomposition.R", echo=TRUE)
source("C:/Workflow/Compare referentials/fct/segment_MED.R")
